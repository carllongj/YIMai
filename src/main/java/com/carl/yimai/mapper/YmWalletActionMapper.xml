<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.carl.yimai.mapper.YmWalletActionMapper">
    <resultMap id="BaseResultMap" type="com.carl.yimai.po.YmWalletAction">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="subject" jdbcType="VARCHAR" property="subject"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="fee" jdbcType="INTEGER" property="fee"/>
        <result column="walletid" jdbcType="VARCHAR" property="walletid"/>
        <result column="created" jdbcType="TIMESTAMP" property="created"/>
        <result column="updated" jdbcType="TIMESTAMP" property="updated"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                                <when
                                    test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach
                                    close=")"
                                    collection="criterion.value"
                                    item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                                <when
                                    test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach
                                    close=")"
                                    collection="criterion.value"
                                    item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, subject, status, fee, walletid, created, updated
  </sql>
    <select id="selectByExample"
        parameterType="com.carl.yimai.po.YmWalletActionExample"
            resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
        <include
            refid="Base_Column_List"/>
    from ym_wallet_action
    <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long"
            resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List"/>
    from ym_wallet_action
    where id = #{id,jdbcType=INTEGER}
  </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ym_wallet_action
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample"
            parameterType="com.carl.yimai.po.YmWalletActionExample">
    delete from ym_wallet_action
    <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.carl.yimai.po.YmWalletAction">
    insert into ym_wallet_action (id, subject, status, 
      fee, walletid, created, 
      updated)
    values (#{id,jdbcType=INTEGER}, #{subject,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{fee,jdbcType=INTEGER}, #{walletid,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP}, 
      #{updated,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective"
            parameterType="com.carl.yimai.po.YmWalletAction">
    insert into ym_wallet_action
    <trim
            prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
        id,
      </if>
            <if test="subject != null">
        subject,
      </if>
            <if test="status != null">
        status,
      </if>
            <if test="fee != null">
        fee,
      </if>
            <if test="walletid != null">
        walletid,
      </if>
            <if test="created != null">
        created,
      </if>
            <if test="updated != null">
        updated,
      </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
            <if test="subject != null">
        #{subject,jdbcType=VARCHAR},
      </if>
            <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
            <if test="fee != null">
        #{fee,jdbcType=INTEGER},
      </if>
            <if test="walletid != null">
        #{walletid,jdbcType=VARCHAR},
      </if>
            <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
            <if test="updated != null">
        #{updated,jdbcType=TIMESTAMP},
      </if>
        </trim>
    </insert>
    <select id="countByExample"
        parameterType="com.carl.yimai.po.YmWalletActionExample"
            resultType="java.lang.Integer">
    select count(*) from ym_wallet_action
    <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
    update ym_wallet_action
    <set>
            <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
            <if test="record.subject != null">
        subject = #{record.subject,jdbcType=VARCHAR},
      </if>
            <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
            <if test="record.fee != null">
        fee = #{record.fee,jdbcType=INTEGER},
      </if>
            <if test="record.walletid != null">
        walletid = #{record.walletid,jdbcType=VARCHAR},
      </if>
            <if test="record.created != null">
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
            <if test="record.updated != null">
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample"
            parameterType="map">
    update ym_wallet_action
    set id = #{record.id,jdbcType=INTEGER},
      subject = #{record.subject,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      fee = #{record.fee,jdbcType=INTEGER},
      walletid = #{record.walletid,jdbcType=VARCHAR},
      created = #{record.created,jdbcType=TIMESTAMP},
      updated = #{record.updated,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.carl.yimai.po.YmWalletAction">
    update ym_wallet_action
    <set>
            <if test="subject != null">
        subject = #{subject,jdbcType=VARCHAR},
      </if>
            <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
            <if test="fee != null">
        fee = #{fee,jdbcType=INTEGER},
      </if>
            <if test="walletid != null">
        walletid = #{walletid,jdbcType=VARCHAR},
      </if>
            <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
            <if test="updated != null">
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
        </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.carl.yimai.po.YmWalletAction">
    update ym_wallet_action
    set subject = #{subject,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      fee = #{fee,jdbcType=INTEGER},
      walletid = #{walletid,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
